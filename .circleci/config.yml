version: 2.1

commands:
  prepare_for_build:
    description: "Prepare for build."
    steps:
      - restore_cache:
          keys:
            - v1-cxxops-cache-{{ .Branch }}-{{ .Revision }}-{{ checksum ".circleci/cxxops.sh" }}
            - v1-cxxops-cache-{{ .Branch }}-{{ .Revision }}-
            - v1-cxxops-cache-{{ .Branch }}-
      - run: 
          name: download cxxopts.hpp
          command: |
            if [ ! -e include/cxxops.hpp ]; then
              bash .circleci/cxxops.sh;
            fi
      - save_cache:
          key: v1-cxxops-cache-{{ .Branch }}-{{ .Revision }}-{{ checksum ".circleci/cxxops.sh" }}
          paths:
            - include
  prepare_for_test:
    description: "Prepare for test."
    steps:
      - restore_cache:
          keys:
            - v1-gtest-cache-{{ .Branch }}-{{ .Revision }}-{ checksum ".circleci/build_googletest.sh" }}
            - v1-gtest-cache-{{ .Branch }}-{{ .Revision }}-
            - v1-gtest-cache-{{ .Branch }}-
      - run:
          name: download and build google test
          command: |
            if [ ! -d tests/googletest ]; then
              bash .circleci/build_googletest.sh;
            fi
      - save_cache:
          key: v1-gtest-cache-{{ .Branch }}-{{ .Revision }}-{{ checksum ".circleci/cxxops.sh" }}
          paths:
            - tests/googletest
jobs:
  google_test:
    working_directory: ~/test
    docker:
      - image: rhikimochi/opencv-docker:v0.14
    steps:
      - checkout
      - prepare_for_build
      - prepare_for_test
      - run:
          name: build unit test
          command: |
            g++ -std=c++11 ./tests/unit_tests/imageDiffCalc_test.cpp -o test `pkg-config --cflags --libs opencv` -Isrc -Iinclude -Itests/googletest/include -Ltests/googletest -lgtest -lgtest_main -lpthread
      - run:
          name: unit test
          command: ./test
      - run:
          name: build integration test
          command: |
            g++ -std=c++11 ./tests/integration_tests/imageDiffCalc_test.cpp -o test `pkg-config --cflags --libs opencv` -Isrc -Iinclude -Itests/googletest/include -Ltests/googletest -lgtest -lgtest_main -lpthread
      - run:
          name: integration test
          command: ./test
      - run:
          name: build system test
          command: |
            g++ -std=c++11 ./tests/system_tests/imageDiffCalc_test.cpp -o test `pkg-config --cflags --libs opencv` -Isrc -Iinclude -Itests/googletest/include -Ltests/googletest -lgtest -lgtest_main -lpthread
      - run:
          name: syetem test
          command: ./test
  build:
    working_directory: /tmp/build
    docker:
      - image: rhikimochi/opencv-docker:v0.14
    steps:
      - checkout
      - prepare_for_build
      - run:
          name: Make object file
          command: g++ -std=c++11 ./src/imageDiffCalc.cpp `pkg-config --libs --cflags opencv` -Iinclude -c
      - run:
          name: Make static library
          command: ar r libimageDiffCalc.a imageDiffCalc.o
      - persist_to_workspace:
          root: /tmp/build
          paths: 
            - libimageDiffCalc.a
  build_and_deploy_image:
    working_directory: ~/build
    machine: true
    environment:
      DOCKER_HUB_REPO: gazo-san
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/build    
      - run:
          name: Move library
          command: mv /tmp/build/libimageDiffCalc.a ~/build/
      - run:
          name: Build image
          command: docker build -t "$DOCKER_HUB_USER"/"$DOCKER_HUB_REPO":"${CIRCLE_TAG/v/}" .
      - run:
          name: Login docker hub
          command: docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_TOKEN"
      - run:
          name: Push image
          command: docker push "$DOCKER_HUB_USER"/"$DOCKER_HUB_REPO":"${CIRCLE_TAG/v/}"
      - run:
          name: Logout docker
          command: docker logout
  deploy_library:
    working_directory: ~/deploy
    docker:
      - image: circleci/node:stretch
    environment:
      OWNER: lifull-dev
      REPO: Gazo-san
      UPLOAD_FILE: /tmp/build/libimageDiffCalc.a
    steps:
      - attach_workspace:
          at: /tmp/build
      - run:
          name: Store upload url and upload assets
          command: |
            UPLOAD_URL_RAW=$(curl -X GET -H "Authorization: token $GITHUB_TOKEN" \
                 "https://api.github.com/repos/$OWNER/$REPO/releases/tags/$CIRCLE_TAG" \
                 | jq '.upload_url')
            UPLOAD_URL=$(echo ${UPLOAD_URL_RAW%\{*} | tr -d \")
            curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
                 -H "Content-Type: $(file -b --mime-type $UPLOAD_FILE)" \
                 --data-binary @$UPLOAD_FILE \
                 "$UPLOAD_URL?name=$(basename $UPLOAD_FILE)"
workflows:
  version: 2
  test:
    jobs:
      - google_test
  build-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v[0-9]{1,}(\.[0-9]{1,}){2}$/
            branches:
              ignore: /.*/
      - deploy_library:
          requires:
            - build
          filters:
            tags:
              only: /^v[0-9]{1,}(\.[0-9]{1,}){2}$/
            branches:
              ignore: /.*/
      - build_and_deploy_image:
          requires:
            - build
          filters:
            tags:
              only: /^v[0-9]{1,}(\.[0-9]{1,}){2}$/
            branches:
              ignore: /.*/
